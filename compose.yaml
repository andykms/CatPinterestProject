version: '3.7'
services:
  proxy:
    container_name: cat-pinterest-proxy
    image: nginx:1.24-alpine-slim
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    depends_on:
      cat-pinterest-api:
        condition: service_started
    ports:
      - "8080:80"
    networks:
      - cat-pinterest-net

  cat-pinterest-api:
    container_name: cat-pinterest-api
    build:
      context: ./api
    environment:
      NODE_ENV: prod
      DB_HOST: cat-pinterest-api-pg
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 1
      DB_NAME: support_lk_db
      JWT_SECRET: 1234567 # Добавляем секрет для JWT
    depends_on:
      cat-pinterest-api-pg:
        condition: service_healthy
    networks:
      - cat-pinterest-net

  cat-pinterest-front:
    container_name: cat-pinterest-front
    image: cat-pinterest-front
    build:
      context: ./front/
    networks:
      - cat-pinterest-net
    environment:
      NODE_ENV: prod

  cat-pinterest-api-pg:
    ports:
      - "5432:5432"
    container_name: cat-pinterest-api-pg
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: 1
      POSTGRES_USER: postgres
      POSTGRES_DB: support_lk_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data # Добавляем volume для сохранения данных
    networks:
      - cat-pinterest-net

networks:
  cat-pinterest-net:

volumes:
  pgdata: # Объявляем volume для PostgreSQL